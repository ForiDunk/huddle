{"version":3,"sources":["components/Header.js","components/Button.js","components/Intro.js","components/Section1.js","components/Section2.js","components/Section3.js","components/Body.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["components_Header","react_default","a","createElement","className","components_Button","_ref","text","components_Intro","components_Section1","components_Section2","components_Section3","components_Body","components_Footer","index_es","icon","faPhone","faEnvelope","faFacebookSquare","faInstagram","faTwitterSquare","type","name","aria-label","App","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0eb86f0d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default () => (\r\n  <div className=\"header\">\r\n    <div className=\"logo\"></div>\r\n    <div className=\"button\">Try It Free</div>\r\n  </div>\r\n);","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default ({ text }) => (\r\n  <div className=\"button-primary\">{ text }</div>\r\n)","import React from 'react';\r\nimport './Intro.css';\r\nimport Button from './Button';\r\n\r\nexport default () => (\r\n  <div className=\"intro\">\r\n    <h2>Build The Community Your Fans Will Love</h2>\r\n    <p className=\"description\">Huddle re-imagines the way we build communities. You have a voice, but so does your audience. Create connections with your users as you engage in geniune discussion.</p>\r\n    <Button text={'Get Started For Free'} />\r\n    <div className=\"screen-mockups\"></div>\r\n    <div className=\"stats\">\r\n      <div className=\"community\">\r\n        <div className=\"community-icon\"></div>\r\n        <p className=\"stats-heading\">1.4k+</p>\r\n        <p className=\"stats-description\">Communities Formed</p>\r\n      </div>\r\n      <div className=\"messages\">\r\n        <div className=\"messages-icon\"></div>\r\n        <p className=\"stats-heading\">2.7m+</p>\r\n        <p className=\"stats-description\">Messages Sent</p>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n);","import React from 'react';\r\nimport './Section1.css';\r\n\r\nexport default () => (\r\n  <div className=\"section section1\">\r\n    <div className=\"text\">\r\n      <h3>Grow Together</h3>\r\n      <p>Generate meaningful discussions with audience and build a strong, loyal community. Think of the insightful conversations you miss out on with a feedback form.</p>\r\n    </div>\r\n    <div className=\"illustration-grow\"></div>\r\n  </div>\r\n);","import React from 'react';\r\nimport './Section2.css';\r\n\r\nexport default () => (\r\n  <div className=\"section section2\">\r\n    <div className=\"illustration-flowing\"></div>\r\n    <div className=\"text\">\r\n      <h3>Flowing Conversations</h3>\r\n      <p>You wouldn't paginate a conversation in real life, so why do it online?</p>\r\n      <p>Our Threads have just-in-time loading for a more natural flow.</p>\r\n    </div>\r\n  </div>\r\n);","import React from 'react';\r\nimport './Section3.css';\r\n\r\nexport default () => (\r\n  <div className=\"section section3\">\r\n    <div className=\"text\">\r\n      <h3>Your Users</h3>\r\n      <p>It takes no time at all to integrate Huddle with your app's authentification solution. This means, once signed in to your app, your users can start chatting immediately.</p>\r\n    </div>\r\n    <div className=\"illustration-users\"></div>\r\n  </div>\r\n);","import React from 'react';\r\nimport Section1 from './Section1';\r\nimport Section2 from './Section2';\r\nimport Section3 from './Section3';\r\nimport Button from './Button';\r\nimport './Body.css';\r\n\r\nexport default () => (\r\n  <div>\r\n    <Section1 />\r\n    <Section2 />\r\n    <Section3 />\r\n    <div className='section4'>\r\n      <h3>Ready To Build Your Community?</h3>\r\n      <Button text={'Get Started For Free'} />\r\n    </div>\r\n  </div>\r\n);","import React from 'react';\r\nimport './Footer.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPhone, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebookSquare, faInstagram, faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nexport default () => (\r\n  <div className=\"footer\">\r\n    <div className=\"footer-section\">\r\n      <div className=\"logo\"></div>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n      <p><FontAwesomeIcon icon={faPhone} />  Phone: +1-543-123-4567</p>\r\n      <p><FontAwesomeIcon icon={faEnvelope} />  example@huddle.com</p>\r\n      <div className=\"social\">\r\n      <FontAwesomeIcon icon={faFacebookSquare} />\r\n      <FontAwesomeIcon icon={faInstagram} />\r\n      <FontAwesomeIcon icon={faTwitterSquare} />\r\n      </div>\r\n    </div>\r\n    <div className=\"footer-section\">\r\n      <h3>NEWSLETTER</h3>\r\n      <p>To receive tips on how to grow your community, sign up to our weekly newsletter. We'll never send you spam or pass on your email address</p>\r\n      <form>\r\n        <input type=\"email\" name=\"email\" aria-label=\"email\" />\r\n        <div className=\"button-primary subscribe\">Subscribe</div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Intro from './Intro';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Intro />\r\n        <Body />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}